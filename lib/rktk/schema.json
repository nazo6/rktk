{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "StaticConfig",
  "type": "object",
  "required": [
    "config",
    "keyboard"
  ],
  "properties": {
    "config": {
      "$ref": "#/definitions/Config"
    },
    "keyboard": {
      "$ref": "#/definitions/Keyboard"
    }
  },
  "definitions": {
    "ComboConfig": {
      "type": "object",
      "required": [
        "threshold"
      ],
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "Config": {
      "description": "Configuration for the firmware.",
      "type": "object",
      "properties": {
        "key_manager": {
          "default": {
            "key_resolver": {
              "combo": {
                "threshold": 20
              },
              "tap_dance": {
                "threshold": 100
              },
              "tap_hold": {
                "hold_on_other_key": true,
                "threshold": 500
              }
            },
            "mouse": {
              "auto_mouse_duration": 500,
              "auto_mouse_layer": 1,
              "auto_mouse_threshold": 1,
              "scroll_divider_x": 20,
              "scroll_divider_y": -12
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/KeyManagerConfig"
            }
          ]
        },
        "rktk": {
          "default": {
            "default_auto_mouse_duration": 500,
            "default_cpi": 600,
            "double_tap_threshold": 500,
            "layer_count": 5,
            "scan_interval_keyboard": 5,
            "scan_interval_mouse": 5,
            "split_channel_size": 64,
            "split_usb_timeout": 1000
          },
          "allOf": [
            {
              "$ref": "#/definitions/RktkConfig"
            }
          ]
        }
      }
    },
    "KeyManagerConfig": {
      "description": "Configs passed to [`rktk_keymanager`]",
      "type": "object",
      "properties": {
        "key_resolver": {
          "default": {
            "combo": {
              "threshold": 20
            },
            "tap_dance": {
              "threshold": 100
            },
            "tap_hold": {
              "hold_on_other_key": true,
              "threshold": 500
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/KeyResolverConfig"
            }
          ]
        },
        "mouse": {
          "default": {
            "auto_mouse_duration": 500,
            "auto_mouse_layer": 1,
            "auto_mouse_threshold": 1,
            "scroll_divider_x": 20,
            "scroll_divider_y": -12
          },
          "allOf": [
            {
              "$ref": "#/definitions/MouseConfig"
            }
          ]
        }
      }
    },
    "KeyResolverConfig": {
      "type": "object",
      "required": [
        "combo",
        "tap_dance",
        "tap_hold"
      ],
      "properties": {
        "combo": {
          "$ref": "#/definitions/ComboConfig"
        },
        "tap_dance": {
          "$ref": "#/definitions/TapDanceConfig"
        },
        "tap_hold": {
          "$ref": "#/definitions/TapHoldConfig"
        }
      }
    },
    "Keyboard": {
      "description": "Keyboard layout and informations.\n\nThis struct is used to - Defines keyboard basic informations (ex: name, cols, rows, ...) - Defines keyboard physical layout which is used by remapper (layout property)\n\n# Coordination of the keyboard matrix\n\nThe rktk coordinate system has the top left as (0,0), and the coordinate values increase toward the bottom right.\n\n## Split keyboard coordinates For `col` in keyboard config, specify the coordinates of the entire keyboard. In other words, for a split keyboard with 7 columns on the left hand side and 7 columns on the right hand side, specify 14.\n\nInternally, the key scan driver returns the coordinates of \"only one hand.\" In other words, in this case, x=0-6. Therefore, it is necessary to convert the coordinates received from the key scan driver into the coordinates of both hands, and for this purpose the `split_right_shift` property is used.\n\nBelow is an example of a split keyboard with 14 columns and 4 rows. ```ignored [    Left    ]   [     Right     ] 0 1 2 3 4 5 6    0 1 2  3  4  5  6 ← One-handed coordinates ↓ split_right_shift=7 (or None) col=14 →   0 1 2 3 4 5 6    7 8 9 10 11 12 13 ← Two-handed coordinates 0 _ Q W E R T _    _ Y U  I  O  P  _ 1 ... 2 ... 3 ... ↑ row=4 ```",
      "type": "object",
      "required": [
        "cols",
        "layout",
        "name",
        "rows"
      ],
      "properties": {
        "cols": {
          "description": "The number of columns in the keyboard matrix.",
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "encoder_count": {
          "description": "The number of encoder keys.",
          "default": 0,
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "layout": {
          "description": "Defines the layout of the keyboard used in the remapper.\n\nThis is a JSON object that represents the layout of the keyboard and compatible with via's json layout format."
        },
        "left_led_count": {
          "description": "RGB led count for left side. This is also used for non-split keyboard.",
          "default": 0,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "name": {
          "description": "The name of the keyboard.",
          "type": "string"
        },
        "right_led_count": {
          "description": "RGB led count for right side",
          "default": 0,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "rows": {
          "description": "The number of rows in the keyboard matrix.",
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "split_right_shift": {
          "description": "A number representing the row number that the right col starts on in a split keyboard.\n\nIf not set, `cols / 2` will be automatically set, so there is no need to set it if the number of columns on the right and left sides is the same. Also, there is no need to set it in the case of a non-split keyboard, as it is not used.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint8",
          "minimum": 0.0
        }
      }
    },
    "MouseConfig": {
      "type": "object",
      "required": [
        "auto_mouse_duration",
        "auto_mouse_layer",
        "auto_mouse_threshold",
        "scroll_divider_x",
        "scroll_divider_y"
      ],
      "properties": {
        "auto_mouse_duration": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "auto_mouse_layer": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "auto_mouse_threshold": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "scroll_divider_x": {
          "type": "integer",
          "format": "int8"
        },
        "scroll_divider_y": {
          "type": "integer",
          "format": "int8"
        }
      }
    },
    "RktkConfig": {
      "description": "RKTK behavior configuration.\n\nMainly keymap related configurations are defined in this struct.",
      "type": "object",
      "properties": {
        "default_auto_mouse_duration": {
          "description": "Default duration of auto mouse mode (ms)",
          "default": 500,
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "default_cpi": {
          "description": "Default CPI value for mouse",
          "default": 600,
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "double_tap_threshold": {
          "description": "Threshold for double tap (ms).",
          "default": 500,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "layer_count": {
          "description": "The number of layers in the keyboard.",
          "default": 5,
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "scan_interval_keyboard": {
          "description": "Time (ms) to wait for the next keyboard scan",
          "default": 5,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "scan_interval_mouse": {
          "description": "Time (ms) to wait for the next mouse scan",
          "default": 5,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "split_channel_size": {
          "description": "The size of the split channel. Usually, you don't need to change this value.",
          "default": 64,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "split_usb_timeout": {
          "description": "Timeout for detecting split USB connection (ms).",
          "default": 1000,
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "TapDanceConfig": {
      "type": "object",
      "required": [
        "threshold"
      ],
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "TapHoldConfig": {
      "type": "object",
      "required": [
        "hold_on_other_key",
        "threshold"
      ],
      "properties": {
        "hold_on_other_key": {
          "type": "boolean"
        },
        "threshold": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    }
  }
}